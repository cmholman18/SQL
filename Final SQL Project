1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT "customers".FirstName,"customers".LastName, "customers".CustomerId, "customers".Country
FROM "chinook"."customers"
WHERE Country != 'USA'
ORDER BY Country;


2. Show only the Customers from Brazil.

SELECT "customers".FirstName,"customers".LastName, "customers".CustomerId, "customers".Country
FROM "chinook"."customers"
WHERE Country = 'Brazil';


3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT "customers".FirstName,"customers".LastName, "invoices".InvoiceId, "invoices".InvoiceDate, "invoices".BillingCountry
FROM "chinook"."customers"
INNER JOIN "chinook"."invoices"
ON Customers.Customerid = invoices.Customerid
WHERE Country = 'Brazil'
ORDER BY InvoiceDate;


4. Show the Employees who are Sales Agents.

SELECT employees.FirstName, employees.LastName, employees.Title
FROM "chinook"."employees"
WHERE title LIKE '%Sales%';


5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT invoices.BillingCountry
FROM "chinook"."invoices";


6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT employees.FirstName, employees.LastName, invoices.Invoiceid
FROM "chinook".employees
INNER JOIN "chinook".customers
ON employees.EmployeeId = customers.SupportRepId
INNER JOIN "chinook".invoices
ON customers.CustomerId = invoices.CustomerId;


7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT invoices.Total, customers.FirstName, customers.LastName, employees.FirstName, employees.LastName, invoices.Invoiceid
FROM "chinook".employees
INNER JOIN "chinook".customers
ON employees.EmployeeId = customers.SupportRepId
INNER JOIN "chinook".invoices
ON customers.CustomerId = invoices.CustomerId
;


8. How many Invoices were there in 2009?

SELECT COUNT(*)
FROM "chinook".invoices
WHERE InvoiceDate LIKE '2009%'


9. What are the total sales for 2009?

SELECT SUM(invoices.Total)
FROM "chinook".invoices
WHERE InvoiceDate LIKE '2009%';


10. Write a query that includes the purchased track name with each invoice line item.

SELECT tracks.Name, invoice_items.InvoiceLineId
FROM "chinook"."tracks"
JOIN "chinook"."invoice_items" ON tracks.Trackid = invoice_items.TrackId
ORDER BY InvoiceLineId;


11. Write a query that includes the purchased track name AND artist name with each invoice line item.

SELECT tracks.Name, tracks.Composer, invoice_items.InvoiceLineId
FROM "chinook"."tracks"
JOIN "chinook"."invoice_items" ON tracks.Trackid = invoice_items.TrackId
;


12.Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.Name AS Track_Name, albums.Title AS Album_Title, media_types.Name AS Media_Type, genres.Name AS Genre
FROM "chinook"."tracks"
JOIN "chinook"."genres" ON tracks.Genreid = genres.Genreid
JOIN "chinook"."media_types" ON media_types.MediaTypeId = tracks.MediaTypeId
JOIN "chinook"."albums" ON tracks.AlbumId = albums.AlbumId;


13. Show the total sales made by each sales agent.

SELECT employees.FirstName, employees.LastName, ROUND(SUM(Total),2)
FROM "chinook".employees 
JOIN "chinook".customers ON employees.EmployeeId = customers.SupportRepId
JOIN "chinook".invoices ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent'
GROUP BY employees.FirstName;


14. Which sales agent made the most in sales in 2009?

SELECT employees.FirstName, employees.LastName, ROUND(SUM(Total),2) AS SALES
FROM "chinook".employees 
JOIN "chinook".customers ON employees.EmployeeId = customers.SupportRepId
JOIN "chinook".invoices ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent' AND invoices.InvoiceDate LIKE '2009%'
GROUP BY employees.FirstName
ORDER BY SALES DESC LIMIT 1;
