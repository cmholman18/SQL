--How many orders were placed in January?
SELECT COUNT(orderID) FROM BIT_DB.JanSales;

--How many of those orders were for an iPhone?
SELECT count(orderID) FROM BIT_DB.JanSales WHERE Product = 'iPhone';

--Select the customer account numbers for all the orders that were placed in February.
SELECT acctnum 
FROM BIT_DB.customers customers
LEFT INNER JOIN BIT_DB.FebSales Feb
ON customers.order_id = Feb.orderID;

--Which product was the cheapest one sold in January, and what was the price?
SELECT Distinct Product, price 
FROM BIT_DB.JanSales 
GROUP BY Product Price
ORDER BY price
LIMIT 1;

OR 

SELECT Distinct product, price
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

--What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT product, SUM(Quantity)*Price AS Revenue
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity), SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;
 
--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(cust.acctnum), avg(quantity)*price 
FROM BIT_DB.FebSales FEB
INNER JOIN BIT_DB.customers cust
ON FEB.orderID = cust.order_id
WHERE FEB.Quantity>2;

--List all the Products sold in Los Angeles in February, and include how many of each were sold.
SELECT distinct Product, sum(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product; 

